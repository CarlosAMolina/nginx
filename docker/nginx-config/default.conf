server {
    #listen       80;
    #listen  [::]:80;
    # ssl
    listen       443 ssl http2;
    server_name  localhost;

    # ssl
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    # Disable SSL.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Optimise cipher suits.
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # Enable DH Params.
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Enable HSTS.
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions.
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        location = /cached-file.html { # Example case insensitive for these extensions.
            add_header Cache-Control public; # Means the resource can be cached.
            add_header Pragma public;
            add_header Vary Accept-encoding; # Means the response can vary based on the request header except encoding
            expires 1h;
        }

        location = /file-to-compress.txt {
            add_header Vary Accept-encoding;
        }

        # Server push
        location = /index.html {
            http2_push /style.css;
            http2_push /nginx.png;
        }

        # Use limit zone.
        location = /rate-limiting.html {
            limit_req zone=MYZONE;
        }
        location = /rate-limiting-with-burst.html {
            limit_req zone=MYZONE burst=5;
        }

        # Basic Auth
        # URL to check: https://localhost:8080/secure/file-with-authentication.html
        location /secure {
            auth_basic "Secure Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
            try_files $uri $uri/ =404;
        }

        location = /no-allowed-in-frame.html {
            # Frame configuration.
            # SAMEORIGIN: the page can be in a frame if the frame is in the same site as the page.
            add_header X-Frame-Options "SAMEORIGIN";
        }

        location /hello {
            #curl --insecure https://localhost:8080/hello/john%20doe
            #return 200 'Requested\n- uri: $uri\n- request_uri: $request_uri\n'; # For debugging.
            proxy_connect_timeout   5;
            proxy_intercept_errors  on;
            proxy_pass              http://127.0.0.1:3030$request_uri;
        }

    }

    # Redirect not found error page to custom page.
    error_page 404 /404.html;
    location = /404.html {
        root   /usr/share/nginx/html/error-pages;
        internal;
    }

    # Redirect server error pages to the static page /50x.html.
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html/error-pages;
        internal;
    }

}

